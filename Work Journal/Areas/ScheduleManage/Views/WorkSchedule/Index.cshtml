@using Newtonsoft.Json
@using Work_Journal.Areas.ScheduleManage.Controllers;
@using Logic.Enums;
<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 8px;
        border-bottom: 1px solid #ddd;
        text-align: left;
    }

    th {
        background-color: #f2f2f2;
    }

    .search_box {
        border: solid;
        border-radius: 5px;
    }

    .angle {
        border: 0px;
        background-color: transparent;
    }

    .exportBtn {
        border-color: mediumpurple;
        background-color: mediumpurple;
        color: white;
    }

</style>
<div id="app" class="container">
    <h1>工作日誌</h1>
    <div class="d-flex align-items-center mb-3">
        <!-- 搜尋框 -->
        <div class="search_box">
            <input type="text" v-model="keyword" class="border-0" placeholder="輸入關鍵字搜尋...">
            <i class="fa-solid fa-magnifying-glass" v-on:click="Search();"></i>
        </div>
        <!--新增鈕-->
        <button type="button" v-on:click="Add();" class="btn btn-primary ms-3">新增</button>
        <!--匯出每周行程-->
        <button type="button" v-on:click="ExportPeriod();" class="btn btn-secondary ms-3">匯出每周行程</button>
    </div>
    <div>
        <span>第{{model.CurrentPage}}頁，共{{model.PageCount}}頁 | </span>
        <span>
            <button class="angle previous" v-on:click="SwitchPage(-1);"><i class="fa-solid fa-angle-left"></i></button>
            <button class="angle next" v-on:click="SwitchPage(1);"><i class="fa-solid fa-angle-right"></i></button>
        </span>
    </div>
    <!-- 列表 -->
    <table>
        <thead>
            <tr>
                <th>工作日期</th>
                <th>標題</th>
                <th>動作</th>
            </tr>
        </thead>
        <tbody>
            <template v-for="item in model.List">
                <tr>
                    <td>{{item.WorkDateTimeString}}</td>
                    <td>{{item.Subject}}</td>
                    <td>
                        <div class="dropdown">
                            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                                <i class="fa-solid fa-bars"></i>
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                <li><a class="dropdown-item" href="javascript:;" v-on:click="Edit(item.Id);">編輯</a></li>
                                <li><a class="dropdown-item" href="javascript:;" v-on:click="ExportThatday(item.WorkDateTimeString);">匯出今日行程</a></li>
                            </ul>
                        </div>
                    </td>
                </tr>
            </template>
        </tbody>
    </table>
</div>

<!--ExportModal-->
<div class="modal fade" id="export_schedule" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">匯出工作日誌</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <input type="date" v-model="startDate" placeholder="輸入開始日期" />
                    <input type="date" v-model="endDate" placeholder="輸入結束日期" />
                    <button v-on:click="Export();" type="button" class="btn btn-info ms-3 exportBtn">輸出</button>
                </div>
                <!--版型預覽-->
                <div>
                </div>
                <!--輸出Area-->
                <div>
                    <table>
                        <thead>
                            <tr>
                                <th colspan="3">工作行程</th>
                            </tr>
                            <tr>
                                <th>日期</th>
                                <th>Issue Id 主旨</th>
                                <th>實際工時(時)</th>
                            </tr>
                        </thead>
                        <tbody>
                            <template v-for="ws in model.WorkSchedules">
                                <tr>
                                    <td>{{DateFormat(ws.Schedule.WorkDateTimeString)}}</td>
                                    <td>
                                        <template v-for="item in ws.ScheduleItems">
                                            <p>{{item.WorkItem}}</p>
                                        </template>
                                    </td>
                                    <td>
                                        <template v-for="item in ws.ScheduleItems">
                                            <p>{{item.WorkDuration}}</p>
                                        </template>
                                    </td>
                                </tr>
                            </template>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
            </div>
        </div>
    </div>
</div>

@Html.AntiForgeryToken()

@section Scripts {
    <script>
        var app = Vue.createApp({
            data() {
                return {
                    model: {},
                    keyword: '',
                }
            },
            created: function () {
                this.Init();
            },
            methods: {
                Init() {
                    this.GetList();
                },
                InitArrow() {
                    if (this.model.HasPreviousPage) {
                        $('.previous').prop('disabled', false);
                    }
                    else {
                        $('.previous').prop('disabled', true);
                    }

                    if (this.model.HasNextPage) {
                        $('.next').prop('disabled', false);
                    }
                    else {
                        $('.next').prop('disabled', true);
                    }
                },
                GetList() {
                    ShowBlock();
                    var model = {
                        Currentpage: this.model.CurrentPage,
                        PageSize: this.model.PageSize,
                        Keyword: this.keyword,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                    };

                    $.ajax({
                        url: '@Url.Action("SwitchPage", "WorkSchedule", new { area = "ScheduleManage" })',
                        type: 'POST',
                        data: model,
                        success: function (response) {
                            app.model = response;
                            app.InitArrow();
                            CloseBlock();
                        }
                    });
                },
                SwitchPage(num) {
                    this.model.CurrentPage += num;
                    this.GetList();
                },
                Search() {
                    // 搜尋重置頁數
                    this.model.CurrentPage = 1;
                    this.GetList();
                },
                Edit(id) {
                    location.href = `@Url.Action(nameof(WorkScheduleController.Input))?scheduleId=${id}&ActionType=@ActionType.Edit`;
                },
                Add() {
                    location.href = `@Url.Action(nameof(WorkScheduleController.Input))?ActionType=@ActionType.Insert`;
                },
                ExportThatday(date) {
                    exportApp.model = [];
                    $('#export_schedule').modal('show');
                    exportApp.startDate = date;
                    exportApp.endDate = date;
                },
                ExportPeriod() {
                    exportApp.model = [];
                    $('#export_schedule').modal('show');
                    exportApp.startDate = this.GetDateNow();
                    exportApp.endDate = this.GetDateNow();
                },
                GetDateNow() {
                    var today = new Date();
                    var year = today.getFullYear();
                    var month = String(today.getMonth() + 1).padStart(2, '0');
                    var day = String(today.getDate()).padStart(2, '0');

                    return `${year}-${month}-${day}`;
                },
            },
        }).mount('#app');

        var exportApp = Vue.createApp({
            data() {
                return {
                    model: [],
                    startDate: '',
                    endDate: '',
                    exportTemplate: 0,
                }
            },
            methods: {
                Export() {
                    var data = {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                        dtSString: this.startDate,
                        dtEString: this.endDate,
                    }

                    $.ajax({
                        url: '@Url.Action(nameof(WorkScheduleController.ExportSchedulePeriod))',
                        type: 'POST',
                        data: data,
                        success: function (response) {
                            exportApp.model = response;
                        }
                    });
                },
                DateFormat(dateStr) {
                    var date = new dayjs(dateStr);
                    return date.format('MM/DD');
                },
            }
        }).mount('#export_schedule');
    </script>
}