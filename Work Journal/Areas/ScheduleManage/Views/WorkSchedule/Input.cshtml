@using Models.ViewModel.ScheduleManage;
@using Work_Journal.Areas.ScheduleManage.Controllers;
@model WorkScheduleInputPage
@{

}


<style>
    .input-row {
        display: flex;
        margin-bottom: 10px;
    }

        .input-row input {
            margin-right: 10px;
        }
</style>
<div id="app">
    <div id="container">
        <h3>工作日誌</h3>
        <!-- 初始輸入欄位 -->
        <div>
            <div class="mb-3">
                <span>主　　旨：</span>
                <input v-model="schedule.Subject" type="text" placeholder="請輸入主旨" />
            </div>
            <div class="">
                <span>工作日期：</span>
                <input v-model="schedule.WorkDateTimeString" type="text" placeholder="請輸入工作日期" />
            </div>
        </div>
        <div>
            <button type="button" v-on:click="AddRow()" class="btn btn-primary my-3">新增</button>
            <template v-for="item in scheduleItems">
                <div class="input-row align-items-center">
                    <input type="text" v-model="item.WorkItem" placeholder="請輸入工作內容">
                    <input type="text" v-model="item.WorkDuration" placeholder="請輸入工時"><span>小時</span>
                    <i v-on:click="DeleteRow(item)" class="fa-regular fa-trash-can ms-2"></i>
                </div>
            </template>
        </div>
    </div>
    <div>
        <button type="button" v-on:click="Confirm()" class="btn btn-outline-success me-3">確定</button>
        <button type="button" v-on:click="GoBack()" class="btn btn-secondary">返回</button>
    </div>
</div>

@Html.AntiForgeryToken()

@section Scripts {
    <script>
        class scheduleItem {
            Id = '';
            ScheduleId = '';
            WorkItem = '';
            WorkDuration = 0;
        }

        var app = Vue.createApp({
            data() {
                return {
                    schedule: {},
                    scheduleItems: [],
                }
            },
            created() {
                this.Init();
            },
            methods: {
                Init() {
                    var scheduleId = '@Model.ScheduleId';
                    if (scheduleId != '') {
                        $.ajax({
                            url: '@Url.Action(nameof(WorkScheduleController.GetWorkScheduleItems))',
                            type: 'POST',
                            data: { scheduleId: scheduleId, __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() },
                            success: function (response) {
                                app.schedule = response.Schedule;
                                app.scheduleItems = response.ScheduleItems;
                            },
                        });
                    }
                },
                AddRow() {
                    var model = {};
                    this.scheduleItems.push(model);
                },
                DeleteRow(item) {
                    var idx = this.scheduleItems.indexOf(item);
                    this.scheduleItems.splice(idx, 1);
                },
                Confirm() {
                    ShowBlock();
                    var model = {
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                        Schedule: this.schedule,
                        ScheduleItems: this.scheduleItems,
                    };

                    if ('@Model.ActionType' == 'Insert') {
                        InsertAjax(model);
                    }
                    else {
                        UpdateAjax(model);
                    }
                },
                GoBack() {
                    window.history.back();
                },
            },
        }).mount('#app');

        function InsertAjax(model) {
            $.ajax({
                url: '@Url.Action(nameof(WorkScheduleController.Insert))',
                type: 'POST',
                data: model,
                success: function (response) {
                    CloseBlock();
                    alert(response.Message);
                    location.href = '@Url.Action(nameof(WorkScheduleController.Index))';
                },
            });
        }

        function UpdateAjax(model) {
            $.ajax({
                url: '@Url.Action(nameof(WorkScheduleController.Update))',
                type: 'POST',
                data: model,
                success: function (response) {
                    CloseBlock();
                    alert(response.Message);
                    location.href = '@Url.Action(nameof(WorkScheduleController.Index))';
                },
            });
        }
    </script>
}
